Practice1 : Write a Program to reverse the Linked List. (Iterative)
Practice2 :Write a Program to reverse the Linked List.(recursive)--Best Approach
Practice3 :Write a Program to reverse the Linked List.(recursive)-Error
Practice4:Find the middle Element of a linked list.
Practice5:Find the middle Element of a linked list.(Optimized approach)
Practice6:Reverse a Linked List in groups of given size
Practice7:Reverse alternate K nodes in a Singly Linked List
Practice8:Check if a linked list is a circular linked list.
practice9:Write a program to Detect loop in a linked list.(Hashing Approach)
practice10:Write a program to Detect loop in a linked list.(Floyd’s Cycle-Finding Algorithm )
practice11:Write a program to Starting node of loop in a linked list.(Floyd’s Cycle-Finding Algorithm )
practice12:Write a program to remove loop in a linked list.(Floyd’s Cycle-Finding Algorithm )
practice13:Remove Duplicates in a sorted Linked List.
practice14:Remove Duplicates in a sorted and Unsorted Linked List.(Another map Approach)
practice15:Remove Duplicates in a sorted  Linked List.(using recursion Approach)
practice16:Remove Duplicates in a Unsorted  Linked List.
practice17:Sort linked list containing 0’s, 1’s, and 2’s in a single traversal
practice18:Sort linked list containing 0’s, 1’s, and 2’s.
practice19:Merge two sorted linked lists into one(require work)
practice20:Merge two sorted linked lists into one
practice21:Write a Program to check whether the Singly Linked list is a palindrome or not.(Using stack)
Practice22:Write a Program to check whether the Singly Linked list is a palindrome or not.(Best approach)
Practice23:Recursively check if the linked list of characters is palindrome or not
